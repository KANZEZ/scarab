<?xml version="1.0" encoding="ISO-8859-15"?>
<launch>
  <arg name="headless" default="false"/>

  <arg name="base_frame" default="base_footprint" />
  <arg name="odom_frame" default="odom" />
  <arg name="map_frame" default="map" />
  <arg name="world_frame" default="/map"/>

  <arg name="map_topic" default="map" />
  <arg name="odom_topic" default="odom" />
  <arg name="pose_topic"  default="pose"/>
  <arg name="goal_topic" default="move_base_simple/goal"/>
  <arg name="scan_topic" default="scan"/>

  <!-- Load world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find scarab_gazebo)/worlds/levine.world"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="false"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="debug" value="false"/>
  </include>

  <!--
  <node pkg="using_markers"
    type="environment_visualization"
    name="env_vis">
    <param name="mesh_resource" value="package://nx_models/models/levine/$(arg world).dae"/>
    <param name="world_frame" value="$(arg world_frame)"/>
  </node>
  -->
  <node name="levine_spawn" pkg="gazebo_ros" type="spawn_model" output="screen"
    args="-sdf -model levine -file $(find scarab_gazebo)/models/levine/model.sdf"/>


  <!-- Load robot  -->
  <param name="robot_description"
    command="$(find xacro)/xacro.py '$(find scarab_description)/urdf/scarab.xacro'" />


  <!--<node name="transformer" pkg="tf" type="static_transform_publisher"
    args="0 0 0 0 0 0 scarab/odom scarab/base_footprint 10" /> -->




  <group ns="$(arg agent)">
    <param name="tf_prefix" value="$(arg agent)" />
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
      output="screen"
      args="-urdf -model scarab -param /robot_description -x 0 -y 0"/>
    <node name="state_publisher" type="robot_state_publisher"
      pkg="robot_state_publisher" output="screen" >
      <param name="use_tf_static" value="false" />
      <param name="publish_frequency" type="double" value="30.0" />
      <param name="whitelist" value="base,camera,laser,hokuyo" />
    </node>

    <!-- TODO: need to add scarb_description/params/mux.yaml for this to work.
    <node pkg="nodelet" type="nodelet" name="mobile_base_nodelet_manager" args="manager"/>
    <node pkg="nodelet" type="nodelet" name="cmd_vel_mux"
      args="load yocs_cmd_vel_mux/CmdVelMuxNodelet mobile_base_nodelet_manager">
      <param name="yaml_cfg_file" value="$(find scarab_description)/param/mux.yaml" />
      <remap from="cmd_vel_mux/output" to="mobile_base/commands/velocity"/>
    </node>
    -->


    <!-- Publish the pose -->
    <node name="pose_stamped" pkg="hfn" type="tf_posestamped_node.py" >
      <param name="base_frame_id" value="$(arg agent)/$(arg base_frame)" />
      <param name="map_frame_id" value="$(arg agent)/$(arg map_frame)" />
      <remap from="pose" to="$(arg pose_topic)" />
    </node>

    <!-- TODO: hfn
    <include file="$(find nx_launch)/launch/scarab_hfn.launch">
      <arg name="ns" value="$(arg agent)"/>
    </include>

    <node name="hfn_trajlen" pkg="hfn" type="hfn_trajlen"
      respawn="false" output="screen" launch-prefix="" >
      <remap from="~odom_topic" to="$(arg agent)/odom" />
      <remap from="~goal_topic" to="$(arg agent)/move/status" />
    </node> -->
    <!-- Getting the goal from rviz -->
    <node name="goal_to_action" pkg="hfn" type="goal_to_action.py">
      <remap from="goal" to="$(arg goal_topic)"/>
    </node>

    <!-- Navigation via hfn -->
    <node name="navigation" pkg="hfn" type="hfn"
      respawn="false" output="screen" launch-prefix="" >
      <param name="base_frame_id" value="$(arg agent)/$(arg base_frame)"/>
      <param name="map_frame_id" value="$(arg agent)/$(arg map_frame)" />

      <param name="cost_occ_prob" value="0.7" />
      <param name="cost_occ_dist" value="0.7" />
      <param name="max_occ_dist" value="1.0" />
      <param name="lethal_occ_dist" value="0.2" />

      <param name="axle_width" value="0.255" />
      <param name="robot_radius" value="0.3" />
      <param name="safety_margin" value="0.1" />
      <param name="social_margin" value="0.2" />

      <param name="goal_tolerance_ang" value=".05"/> <!--default 2pi-->
      <param name="goal_tolerance" value=".05"/> <!--default .2m-->

      <remap from="map" to="$(arg map_topic)" />
      <remap from="odom" to="$(arg odom_topic)" />
      <remap from="scan" to="$(arg scan_topic)" />
      <remap from="pose" to="$(arg pose_topic)" />

    </node>
  </group>


    <!-- Start Mapping -->
    <node pkg="gmapping" type="slam_gmapping" name="$(arg agent)_slam_gmapping" output="screen" >
      <remap from="scan" to="$(arg agent)/$(arg scan_topic)"/>
      <remap from="map" to="$(arg agent)/$(arg map_topic)"/>
      <param name="base_frame" value="$(arg agent)/$(arg base_frame)" />
      <param name="odom_frame" value="$(arg agent)/$(arg odom_frame)"/>
      <param name="map_frame" value="$(arg agent)/$(arg map_frame)" />
      <remap from="map_metadata" to="map_metadata"/>

      <!-- params -->
      <param name="map_update_interval" value="1"/>
      <param name="maxUrange" value="16.0"/> <!-- 6.0 -->
      <param name="maxRange" value="30.0"/>  <!-- 8.0 -->
      <param name="sigma" value="0.05"/>
      <param name="kernelSize" value="1"/>
      <param name="lstep" value="0.05"/>
      <param name="astep" value="0.05"/>
      <param name="iterations" value="5"/>
      <param name="lsigma" value="0.075"/>
      <param name="ogain" value="3.0"/>
      <param name="lskip" value="0"/>
      <param name="minimumScore" value="2000"/>
      <param name="srr" value="0.01"/>
      <param name="srt" value="0.02"/>
      <param name="str" value="0.01"/>
      <param name="stt" value="0.02"/>
      <param name="linearUpdate" value="0.25"/>      <!-- 0.5 -->
      <param name="angularUpdate" value="0.2618"/>   <!-- 0.436 -->
      <param name="temporalUpdate" value="-1.0"/>   <!-- 2.0 -->
      <param name="resampleThreshold" value="0.5"/>
      <param name="particles" value="80"/>          <!-- 20 -->
      <param name="xmin" value="-30.0" />
      <param name="ymin" value="-30.0" />
      <param name="xmax" value="30.0" />
      <param name="ymax" value="30.0" />
      <param name="delta" value="0.025"/>
      <param name="llsamplerange" value="0.01"/>
      <param name="llsamplestep" value="0.01"/>
      <param name="lasamplerange" value="0.005"/>
      <param name="lasamplestep" value="0.005"/>
      <param name="transform_publish_period" value="0.02"/>
    </node>


  </launch>

