<launch>

  <arg name="agent"         default="$(env AGENT)" />

  <arg name="use_vicon"     default="false"/>
  <arg name="odom_topic"    default="odom_vicon" if="$(arg use_vicon)"/>
  <arg name="odom_topic"    default="odom_laser" unless="$(arg use_vicon)"/>
  <arg name="map_topic"     default="map"        if="$(arg use_vicon)"/>
  <arg name="map_topic"     default="map_hokuyo" unless="$(arg use_vicon)"/>

  <arg name="cmd_vel_topic" default="cmd_vel"/>
  <arg name="scan_topic"    default="scan"/>
  <arg name="pose_topic"    default="pose"/>
  <arg name="goal_topic"    default="move_base_simple/goal"/>

  <arg name="map_frame"     default="map_hokuyo" />
  <arg name="base_frame"    default="base_link" />
  <arg name="odom_frame"    default="odom" />


  <!-- launch components for navigation with vicon -->
  <group if="$(arg use_vicon)" ns="$(arg agent)">

    <node pkg="map_server" name="map" type="map_server" output="screen"
          args="$(find scarab)/maps/empty_map.yaml" >
      <param name="frame_id" value="$(arg agent)/$(arg map_frame)" />
      <remap from="map" to="$(arg agent)/$(arg map_topic)" />
    </node>

    <node name="dummy_slam" pkg="tf" type="static_transform_publisher"
          args="0.0 0.0 0.0 0.0 0.0 0.0 $(arg agent)/$(arg map_frame) /$(arg agent)/$(arg odom_frame) 100" />

    <node name="odom_to_tf" pkg="scarab" type="odom_to_tf.py" output="screen">
      <param name="base_frame_id" value="$(arg agent)/$(arg base_frame)"/>
      <param name="odom_frame_id" value="$(arg agent)/$(arg odom_frame)"/>
      <remap from="odom" to="$(arg odom_topic)" />
    </node>

    <!--
        <node name="pose_stamped" pkg="hfn" type="tf_posestamped_node.py" >
        <param name="base_frame_id" value="/$(arg agent)/$(arg base_frame)" />
        <param name="map_frame_id" value="/$(arg agent)/$(arg map_frame)" />
        </node> -->

  </group>

  <!-- launch components for navigation with gmapping -->
  <group unless="$(arg use_vicon)">

    <include file="$(find scarab)/launch/gmapping.launch">
      <arg name="scan_topic"  value="$(arg scan_topic)"/>
      <arg name="map_topic"   value="$(arg map_topic)"/>
      <arg name="odom_frame"  value="$(arg odom_frame)"/>
      <arg name="base_frame"  value="$(arg base_frame)"/>
      <arg name="map_frame"   value="$(arg map_frame)"/>
    </include>

    <node name="laser_odom" pkg="laser_odom" type="laser_odom"
          output="screen" ns="$(arg agent)">
      <param name="debug" value="false" />
      <param name="base_frame" value="$(arg agent)/$(arg base_frame)" />
      <param name="odom_frame" value="$(arg agent)/odom_laser" />
      <rosparam>
        grid_resolution: 0.05
        sensor_sd: 0.02
        subsample: 1
        travel_distance: 0.2
        travel_angle: 0.034
        decay_duration: 200
        decay_step: 40
        range_x: 0.2
        range_y: 0.2
      </rosparam>
    </node>

  </group>


  <!-- common components -->
  <group ns="$(arg agent)">

    <node name="pose" pkg="hfn" type="tf_posestamped_node.py" output="screen">
      <param name="base_frame_id" value="$(arg agent)/$(arg base_frame)"/>
      <param name="map_frame_id" value="$(arg agent)/$(arg map_frame)"/>
      <remap from="pose" to="$(arg pose_topic)" />
    </node>

    <node name="hfn" pkg="hfn" type="hfn" output="screen">
      <param name="base_frame_id" value="$(arg agent)/$(arg base_frame)" />
      <param name="map_frame_id" value="$(arg agent)/$(arg map_frame)" />

      <param name="tau_1" value="1.0" />
      <param name="tau_2" value="0.2" />
      <param name="cost_occ_prob" value="0.01" />
      <param name="cost_occ_dist" value="0.15" />
      <param name="max_occ_dist" value="0.5" />
      <param name="lethal_occ_dist" value="0.35" />

      <param name="v_opt" value="0.16" />
      <param name="w_max" value="1.0" />
      <!-- 0.0873 rad ~= 5 degrees -->
      <param name="goal_tolerance_ang" value="0.2" />
      <param name="min_map_update" value="2.0" />
      <param name="stuck_start" value="3.0" />

      <remap from="odom" to="$(arg odom_topic)" />
      <remap from="map" to="$(arg map_topic)" />
      <remap from="scan" to="$(arg scan_topic)" />
      <remap from="pose" to="$(arg pose_topic)" />
      <param name="stop_on_preempt" value="false" />
    </node>

    <!-- allows sending nav goals from rviz -->
    <node name="goal_to_action" pkg="hfn" type="goal_to_action.py" output="screen">
      <remap from="goal" to="$(arg goal_topic)" />
    </node>

  </group>

</launch>
